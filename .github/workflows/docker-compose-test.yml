name: Docker Compose Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test-docker-compose:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create Docker Compose compatibility script
        run: |
          # Create a script to use 'docker compose' instead of 'docker-compose'
          echo '#!/bin/bash
          docker compose "$@"' > docker-compose
          chmod +x docker-compose
          sudo mv docker-compose /usr/local/bin/
          echo "Created docker-compose compatibility wrapper"

      - name: Create .env file
        run: |
          echo "BACKEND_PORT=8000" > .env
          echo "FRONTEND_PORT=3000" >> .env

      - name: Start application with Docker Compose
        run: |
          # Use docker compose directly instead of the script
          docker compose down
          docker compose up --build -d
          echo "Application started"

      - name: Display Docker container status after startup
        run: |
          echo "Initial container status:"
          docker compose ps
          docker compose logs --tail=50

      - name: Wait for services to be ready
        run: |
          # Wait for containers to initialize (give them some time to start)
          sleep 20

          # Wait for backend to be available (timeout after 120 seconds)
          echo "Checking backend availability..."
          timeout 120 bash -c 'until $(curl --output /dev/null --silent --head --fail http://localhost:8000/admin || curl --output /dev/null --silent --fail http://localhost:8000); do printf "."; sleep 5; done'
          echo "Backend is up and running"

          # Wait for frontend to be available (timeout after 120 seconds)
          echo "Checking frontend availability..."
          timeout 120 bash -c 'until $(curl --output /dev/null --silent --head --fail http://localhost:3000); do printf "."; sleep 5; done'
          echo "Frontend is up and running"

      - name: Test backend API connection
        run: |
          # Basic test to check if backend responds
          curl -s http://localhost:8000 || true

      - name: Test frontend connection
        run: |
          # Basic test to check if frontend responds
          curl -s http://localhost:3000 || true

      - name: Display Docker container status
        run: docker compose ps

      - name: Check container logs if test fails
        if: failure()
        run: |
          echo "Docker Compose Logs:"
          docker compose logs

      - name: Stop application
        run: |
          docker compose down
          echo "All containers have been stopped."
